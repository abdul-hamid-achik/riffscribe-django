{
    "name": "riffscribe-django",
    "description": "Django-based AI audio-to-guitar-tab transcription service with Celery background processing",
    "dockerfile": ".cursor/Dockerfile.cursor",
    "install": "uv sync && uv run python manage.py migrate && uv run python manage.py collectstatic --noinput",
    "secrets": [
        "DATABASE_URL",
        "REDIS_URL",
        "CELERY_BROKER_URL",
        "CELERY_RESULT_BACKEND",
        "SECRET_KEY",
        "OPENAI_API_KEY",
        "AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY",
        "AWS_STORAGE_BUCKET_NAME",
        "AWS_S3_ENDPOINT_URL"
    ],
    "terminals": [
        {
            "name": "Django Dev Server",
            "command": "uv run python manage.py runserver 0.0.0.0:8000",
            "description": "Start Django development server on port 8000"
        },
        {
            "name": "Celery Worker",
            "command": "uv run celery -A riffscribe worker --loglevel=info --concurrency=2",
            "description": "Start Celery worker for background task processing"
        },
        {
            "name": "Celery Beat Scheduler",
            "command": "uv run celery -A riffscribe beat --loglevel=info",
            "description": "Start Celery beat scheduler for periodic tasks"
        },
        {
            "name": "Tests",
            "command": "uv run pytest -v",
            "description": "Run the full test suite"
        }
    ],
    "environment_variables": {
        "DJANGO_SETTINGS_MODULE": "riffscribe.settings",
        "PYTHONPATH": "/app",
        "DEBUG": "True",
        "USE_S3": "false",
        "ALLOWED_HOSTS": "localhost,127.0.0.1,0.0.0.0"
    },
    "ports": [
        {
            "port": 8000,
            "description": "Django development server"
        },
        {
            "port": 5555,
            "description": "Flower monitoring interface for Celery"
        }
    ]
}