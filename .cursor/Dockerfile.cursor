# Dockerfile optimized for Cursor Background Agents with embedded services
# Self-contained environment with PostgreSQL + Redis + Django

FROM python:3.11-slim-bookworm

# Python optimizations
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    UV_NO_CACHE=1 \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy

# Install system dependencies + PostgreSQL + Redis
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Build tools
    build-essential \
    gcc \
    g++ \
    git \
    curl \
    supervisor \
    # Audio processing libraries
    ffmpeg \
    libsndfile1-dev \
    libsndfile1 \
    libportaudio2 \
    portaudio19-dev \
    libgomp1 \
    # Database services
    postgresql-15 \
    postgresql-client-15 \
    redis-server \
    # SSL and crypto
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install UV system-wide so it's available to all users
RUN curl -LsSf https://astral.sh/uv/install.sh | sh \
    && cp /root/.local/bin/uv /usr/local/bin/uv \
    && chmod +x /usr/local/bin/uv

# Verify installation works system-wide
RUN uv --version

# Configure PostgreSQL
USER postgres
RUN /etc/init.d/postgresql start && \
    createdb riffscribe && \
    psql -c "CREATE USER riffscribe WITH PASSWORD 'riffscribe_dev';" && \
    psql -c "GRANT ALL PRIVILEGES ON DATABASE riffscribe TO riffscribe;" && \
    psql -c "ALTER USER riffscribe CREATEDB;"

# Switch back to root to complete setup
USER root

# Configure Redis (allow external connections)
RUN sed -i 's/^bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf

# Create supervisord configuration for managing services
COPY .cursor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set working directory
WORKDIR /app

# Create a non-root user for Django
RUN groupadd -r django && useradd -r -g django -s /bin/bash django

# Verify uv works for django user
USER django
RUN uv --version
USER root

# Create necessary directories with proper permissions
RUN mkdir -p /app/media /app/static /app/staticfiles /app/tmp /app/audio /app/exports \
    && chown -R django:django /app

# Copy project files (this will be done by Cursor during setup)
# The background agent will checkout the repository automatically

# Set up environment variables for embedded services
ENV DJANGO_SETTINGS_MODULE=riffscribe.settings \
    PYTHONPATH=/app \
    DEBUG=True \
    DATABASE_URL=postgresql://riffscribe:riffscribe_dev@localhost:5432/riffscribe \
    REDIS_URL=redis://localhost:6379/0 \
    CELERY_BROKER_URL=redis://localhost:6379/0 \
    CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Start services with supervisord and allow background agent to override
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
