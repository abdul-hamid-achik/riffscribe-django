# Generated by Django 5.2.6 on 2025-09-05 02:02

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("transcriber", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FingeringVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "variant_name",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("balanced", "Balanced"),
                            ("technical", "Technical"),
                            ("original", "Original"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "difficulty_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                (
                    "playability_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("tab_data", models.JSONField()),
                ("removed_techniques", models.JSONField(blank=True, null=True)),
                ("config", models.JSONField(blank=True, null=True)),
                ("is_selected", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "transcription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="transcriber.transcription",
                    ),
                ),
            ],
            options={
                "ordering": ["difficulty_score"],
                "unique_together": {("transcription", "variant_name")},
            },
        ),
        migrations.CreateModel(
            name="PlayabilityMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "playability_score",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "recommended_skill_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("max_fret_span", models.IntegerField(blank=True, null=True)),
                ("position_changes", models.IntegerField(blank=True, null=True)),
                ("open_strings_used", models.IntegerField(blank=True, null=True)),
                ("problem_sections", models.JSONField(blank=True, null=True)),
                ("slow_tempo_suggestion", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transcription",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="transcriber.transcription",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FingeringMeasureStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("measure_number", models.IntegerField()),
                ("avg_fret", models.FloatField()),
                ("max_jump", models.IntegerField()),
                ("chord_span", models.IntegerField()),
                ("string_crossings", models.IntegerField()),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="measure_stats",
                        to="transcriber.fingeringvariant",
                    ),
                ),
            ],
            options={
                "ordering": ["measure_number"],
                "unique_together": {("variant", "measure_number")},
            },
        ),
    ]
