# Production override for docker-compose
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:
  django:
    build:
      target: production
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 120 riffscribe.wsgi:application
    volumes:
      # Remove source code mount in production
      - media_volume:/app/media
      - static_volume:/app/staticfiles
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=riffscribe.settings
    restart: unless-stopped

  celery:
    build:
      target: celery
    volumes:
      # Only media volume in production
      - media_volume:/app/media
    restart: unless-stopped

  celery-beat:
    build:
      target: celery-beat
    volumes: []  # No volumes needed for beat
    restart: unless-stopped

  # Add nginx for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - django
    networks:
      - riffscribe_network
    restart: unless-stopped

  # Remove flower in production or secure it
  flower:
    profiles: ["monitoring"]  # Only start if explicitly requested

  # Use production Redis config
  redis:
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped

  # Production database config
  db:
    environment:
      - POSTGRES_DB=${DB_NAME:-riffscribe}
      - POSTGRES_USER=${DB_USER:-riffscribe}
      - POSTGRES_PASSWORD=${DB_PASSWORD}  # Must be set in .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-riffscribe}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_volume:  # Add static files volume for nginx